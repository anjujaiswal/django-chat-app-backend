# Generated by Django 4.2.6 on 2023-11-24 05:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('country_code', models.CharField(max_length=5)),
                ('phone_number', models.CharField()),
                ('profile_picture', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_type', models.CharField(choices=[('individual', 'individual'), ('group', 'group')], default='group', max_length=50)),
                ('group_name', models.CharField(blank=True, max_length=100, null=True)),
                ('group_picture', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('group_quotes', models.TextField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'room',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsersMapping',
            fields=[
                ('chat_user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('app_user_id', models.ForeignKey(db_column='app_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='mapping_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_mapping',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('online', 'online'), ('offline', 'offline')], default='offline', max_length=100)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('status_quotes', models.CharField(blank=True, max_length=150, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('chat_user_id', models.ForeignKey(db_column='chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='status_chat_user_id', to='users.usersmapping')),
            ],
            options={
                'db_table': 'user_status',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_token', models.CharField(max_length=255)),
                ('device_id', models.CharField(max_length=100)),
                ('device_type', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=5)),
                ('jwt_token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('chat_user_id', models.ForeignKey(db_column='chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='session_chat_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'session',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('setting_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_seen_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('profile_picture_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('status_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('message_receipts', models.CharField(choices=[('on', 'on'), ('off', 'off')], default='on', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('chat_user_id', models.ForeignKey(db_column='chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='privacy_chat_user_id', to='users.usersmapping')),
            ],
            options={
                'db_table': 'privacy_settings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(blank=True, choices=[('text', 'text'), ('image', 'image'), ('video', 'video'), ('location', 'location'), ('contact', 'contact'), ('document', 'document'), ('None', None)], max_length=50, null=True)),
                ('message_content', models.TextField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('thumbnail_file_path', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('deleted_for', models.CharField(blank=True, choices=[('me', 'me'), ('all', 'all'), ('None', None)], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, related_name='room_messages', to='users.room')),
                ('sender_chat_user_id', models.ForeignKey(db_column='sender_chat_user_id', on_delete=django.db.models.deletion.CASCADE, to='users.usersmapping')),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_to_chat_user_id', models.ForeignKey(db_column='delivered_to_chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='delivered_to', to='users.usersmapping')),
                ('message_id', models.ForeignKey(db_column='message_id', on_delete=django.db.models.deletion.CASCADE, related_name='to_messages', to='users.messages')),
                ('read_by_chat_user_id', models.ForeignKey(db_column='read_by_chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='read_by', to='users.usersmapping')),
                ('room_id', models.ForeignKey(db_column='room_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_room', to='users.room')),
            ],
            options={
                'db_table': 'message_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('chat_user_id', models.ForeignKey(db_column='chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='member_chat_user_id', to='users.usersmapping')),
                ('removed_by', models.ForeignKey(blank=True, db_column='removed_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='removed_by', to='users.usersmapping')),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, related_name='group_member', to='users.room')),
            ],
            options={
                'db_table': 'group_members',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('chat_user_id', models.ForeignKey(db_column='chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='contactlist_chat_user_id', to='users.usersmapping')),
                ('contact_chat_user_id', models.ForeignKey(blank=True, db_column='contact_chat_user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contactlist_contact_chat_user_id', to='users.usersmapping')),
            ],
            options={
                'db_table': 'user_contact_list',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlockList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('from_chat_user_id', models.ForeignKey(db_column='from_chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_from', to='users.usersmapping')),
                ('to_chat_user_id', models.ForeignKey(db_column='to_chat_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_to', to='users.usersmapping')),
            ],
            options={
                'db_table': 'user_blocked_list',
                'ordering': ['-created_at'],
            },
        ),
    ]
