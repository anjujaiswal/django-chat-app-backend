# Generated by Django 4.2.6 on 2023-10-21 07:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('status_quotes', models.CharField(blank=True, max_length=150, null=True)),
                ('user_active', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_token', models.CharField(blank=True, max_length=255, null=True)),
                ('device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('device_type', models.CharField(max_length=50)),
                ('jwt_token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'session',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_type', models.CharField(choices=[('individual', 'individual'), ('group', 'group')], default='group', max_length=50)),
                ('group_name', models.CharField(blank=True, max_length=100, null=True)),
                ('group_picture', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('group_quotes', models.TextField(blank=True, null=True)),
                ('last_msg_sent_by', models.CharField(max_length=100)),
                ('last_msg', models.TextField()),
                ('last_msg_type', models.CharField(choices=[('text', 'text'), ('image', 'image'), ('video', 'video')], default='text', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_msg_sender_id', models.ForeignKey(db_column='last_msg_sender_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'room',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_seen_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('profile_picture_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('status_visibility', models.CharField(choices=[('nobody', 'nobody'), ('public', 'public'), ('contacts', 'contacts')], default='public', max_length=50)),
                ('message_receipts', models.CharField(choices=[('on', 'on'), ('off', 'off')], default='on', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_settings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group_picture', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('is_admin', models.CharField(choices=[('on', 'on'), ('off', 'off')], default='off', max_length=50)),
                ('is_deleted', models.CharField(choices=[('on', 'on'), ('off', 'off')], default='off', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('member_id', models.ForeignKey(db_column='member_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room_id', models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='users.room')),
            ],
            options={
                'db_table': 'group_members',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('contact_user_id', models.ForeignKey(blank=True, db_column='contact_user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_user_id', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_contact_list',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlockList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('from_user_id', models.ForeignKey(db_column='from_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_from', to=settings.AUTH_USER_MODEL)),
                ('to_user_id', models.ForeignKey(db_column='to_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='blocked_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_blocked_list',
                'ordering': ['-created_at'],
            },
        ),
    ]
